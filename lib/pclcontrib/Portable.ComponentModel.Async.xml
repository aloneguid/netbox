<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Portable.ComponentModel.Async</name>
    </assembly>
    <members>
        <member name="T:System.ComponentModel.AsyncOperation">
            <summary>
                Tracks the lifetime of an asynchronous operation.
            </summary>
        </member>
        <member name="M:System.ComponentModel.AsyncOperation.OperationCompleted">
            <summary>
                Ends the lifetime of an asynchronous operation.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted"/> has been called previously for this task. 
            </exception>
        </member>
        <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
                Invokes a delegate on the thread or context appropriate for the application model.
            </summary>
            <param name="d">
                A SendOrPostCallback object that wraps the delegate to be called when the operation ends. 
            </param>
            <param name="arg">
                An argument for the delegate contained in the d parameter
            </param>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted"/> has been called previously for this task. 
            </exception>
        </member>
        <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
                Ends the lifetime of an asynchronous operation.
            </summary>
            <param name="d">
                A SendOrPostCallback object that wraps the delegate to be called when the operation ends. 
            </param>
            <param name="arg">
                An argument for the delegate contained in the d parameter
            </param>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted"/> has been called previously for this task. 
            </exception>
        </member>
        <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
            <summary>
                Gets the current SynchronizationContext
            </summary>
            <value>
                The current <see cref="P:System.ComponentModel.AsyncOperation.SynchronizationContext"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
            <summary>
                Gets an object used to uniquely identify an asynchronous operation.
            </summary>
            <value>
                The state object passed to the asynchronous method invocation.
            </value>
        </member>
        <member name="T:System.ComponentModel.AsyncOperationManager">
            <summary>
                Provides concurrency management for classes that support asynchronous method calls.
            </summary>
        </member>
        <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
            <summary>
                Returns an <see cref="T:System.ComponentModel.AsyncOperation"/> for tracking the duration of a particular asynchronous operation.
            </summary>
            <param name="userSuppliedState">
                An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation. 
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.AsyncOperation"/> that you can use to track the duration of an asynchronous method invocation.
            </returns>
        </member>
        <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Threading.SynchronizationContext,System.Object)">
            <summary>
                Returns an <see cref="T:System.ComponentModel.AsyncOperation"/> for tracking the duration of a particular asynchronous operation.
            </summary>
            <param name="userSuppliedState">
                An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation. 
            </param>
            <param name="context">
                A <see cref="T:System.Threading.SynchronizationContext"/> for the asynchronous operation.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.AsyncOperation"/> that you can use to track the duration of an asynchronous method invocation.
            </returns>
        </member>
        <member name="T:System.ComponentModel.BackgroundWorker">
            <summary>
                Executes an operation on a separate thread.
            </summary>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged"/> event.
            </summary>
            <param name="percentProgress">
                The percentage, from 0 to 100, of the background operation that is complete. 
            </param>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress"/> property is <see langword="false"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged"/> event.
            </summary>
            <param name="percentProgress">
                The percentage, from 0 to 100, of the background operation that is complete. 
            </param>
            <param name="userState">
                The state object passed to <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync"/>.
            </param>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress"/> property is <see langword="false"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
            <summary>
                Starts execution of a background operation.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy"/> is <see langword="true"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
            <summary>
                Starts execution of a background operation.
            </summary>
            <param name="argument">
                A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork"/> event handler. 
            </param>
            <exception cref="T:System.InvalidOperationException">
                <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy"/> is <see langword="true"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.CancelAsync">
            <summary>
                Requests cancellation of a pending background operation.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation"/> property is <see langword="false"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork"/> event. 
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.DoWorkEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged"/> event. 
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted"/> event. 
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:System.ComponentModel.BackgroundWorker.CreateAsyncOperation">
            <summary>
                Creates a new async operation.
            </summary>
            <returns>
                An <see cref="T:System.ComponentModel.AsyncOperation"/>.
            </returns>
        </member>
        <member name="E:System.ComponentModel.BackgroundWorker.DoWork">
            <summary>
                Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync"/> is called.
            </summary>
        </member>
        <member name="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
            <summary>
                Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)"/> is called.
            </summary>
        </member>
        <member name="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
            <summary>
                Occurs when the background operation has completed, has been canceled, or has raised an exception.
            </summary>
        </member>
        <member name="P:System.ComponentModel.BackgroundWorker.CancellationPending">
            <summary>
                Gets a value indicating whether the application has requested cancellation of a background operation.
            </summary>
            <value>
                <see langword="true"/> if the application has requested cancellation of a background operation; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.BackgroundWorker.IsBusy">
            <summary>
                Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker"/> is running an asynchronous operation.
            </summary>
            <value>
                <see langword="true"/>, if the <see cref="T:System.ComponentModel.BackgroundWorker"/> is running an asynchronous operation; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
            <summary>
                Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker"/> can report progress updates.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.BackgroundWorker"/> supports progress updates; otherwise <see langword="false"/>. The default is <see langword="false"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
            <summary>
                Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker"/> supports asynchronous cancellation.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.BackgroundWorker"/> supports cancellation; otherwise <see langword="false"/>. The default is <see langword="false"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.DoWorkEventArgs">
            <summary>
                Provides data for the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork"/> event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.DoWorkEventArgs"/> class.
            </summary>
            <param name="argument">
                An <see cref="T:System.Object"/> representing the argument of an asynchronous operation.
            </param>
        </member>
        <member name="P:System.ComponentModel.DoWorkEventArgs.Argument">
            <summary>
                Gets a value that represents the argument of an asynchronous operation.
            </summary>
            <value>
                An <see cref="T:System.Object"/> representing the argument of an asynchronous operation.
            </value>
        </member>
        <member name="P:System.ComponentModel.DoWorkEventArgs.Result">
            <summary>
                Gets or sets a value that represents the result of an asynchronous operation.
            </summary>
            <value>
                An <see cref="T:System.Object"/> representing the result of an asynchronous operation.
            </value>
        </member>
        <member name="T:System.ComponentModel.DoWorkEventHandler">
            <summary>
                Represents the method that will handle the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork"/> event of a <see cref="T:System.ComponentModel.BackgroundWorker"/> class.
            </summary>
            <param name="sender">
                The source of the event.
            </param>
            <param name="e">
                A <see cref="T:System.ComponentModel.DoWorkEventArgs"/> that contains the event data.
             </param>
        </member>
        <member name="T:System.ComponentModel.RunWorkerCompletedEventArgs">
            <summary>
                Provides data for the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted"/> event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> class.
            </summary>
            <param name="result">
                The result of an asynchronous operation.
            </param>
            <param name="error">
                Any error that occurred during the asynchronous operation.
            </param>
            <param name="cancelled">
                A value indicating whether the asynchronous operation was cancelled.
            </param>
        </member>
        <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
            <summary>
                Gets a value that represents the result of an asynchronous operation.
            </summary>
            <exception cref="T:System.Reflection.TargetInvocationException">
                <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error"/> is not <see langword="null"/>. The <see cref="P:System.Exception.InnerException"/> property holds a reference to <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled"/> is <see langword="true"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState">
            <summary>
                Gets a value that represents the user state.
            </summary>
            <value>
                An <see cref="T:System.Object"/> representing the user state.
            </value>
        </member>
        <member name="T:System.ComponentModel.RunWorkerCompletedEventHandler">
            <summary>
                Represents the method that will handle the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted"/> event of a <see cref="T:System.ComponentModel.BackgroundWorker"/> class.
            </summary>
            <param name="sender">
                The source of the event.
            </param>
            <param name="e">
                A <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> that contains the event data.
            </param>
        </member>
    </members>
</doc>
